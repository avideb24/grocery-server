// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model MainCategory {
  id         String     @id              @default(uuid())
  title      String     @unique
  icon       String     @db.VarChar(512)

  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  
  categories Category[]

  @@map("main_category")
}

model Category {
  id             String        @id             @default(uuid())
  title          String        @unique
  icon           String        @db.VarChar(512)

  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  
  mainCategory   MainCategory  @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId String
  subCategories  SubCategory[]

  @@map("category")
}

model SubCategory {
  id         String    @id             @default(uuid())
  title      String    @unique

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  products   Product[]

  @@map("sub_category")
}

model Product {
  id             String      @id              @default(uuid())
  title          String      @unique
  regularPrice   Int
  discountPrice  Int?
  thumbnailImage String      @db.VarChar(512)
  description    String?     @db.LongText
  stock          Int
  weight         String?

  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  subCategory    SubCategory @relation(fields: [subCategoryId], references: [id])
  subCategoryId  String
  images         Image[]
  orderItems     OrderItem[]
  wishListItems  WishListItem[]
  stories        Story[]
  offerItems     OfferItem[]

  @@map("product")
}

model Image {
  id        String   @id              @default(uuid())
  url       String   @db.VarChar(512)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@map("image")
}

model User {
  id            String      @id             @default(uuid())
  mobile        String      @unique
  name          String?
  gender        String?
  email         String?     @unique
  otp           Int?
  addressLine   String?
  city          String?
  remarks       String?

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  orders        Order[]
  wishList      WishList?

  @@map("user")
}

model Order {
  id              Int          @id             @default(autoincrement())
  orderStatus     String
  totalAmount     Int
  deliveryAddress String
  deliveryDate    DateTime     @db.Date
  paymentMethod   String
  transactionId   String?
  paymentStatus   String
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  user            User         @relation(fields: [userId], references: [id])
  userId          String
  deliveryMan     DeliveryMan? @relation(fields: [deliveryManId], references: [id])
  deliveryManId   String?
  orderItems      OrderItem[]

  @@map("order")
}

model OrderItem {
  id          String      @id            @default(uuid())
  quantity    Int
  price       Int

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  order       Order       @relation(fields: [orderId], references: [id])
  orderId     Int
  product     Product     @relation(fields: [productId], references: [id])
  productId   String

  @@map("orderItem")
}

model WishList {
  id        String     @id             @default(uuid())

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  wishListItems WishListItem[]

  @@map("wishList")
}

model WishListItem {
  id            String      @id             @default(uuid())
  date          DateTime    @db.Date
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  wishList      WishList    @relation(fields: [wishListId], references: [id])
  wishListId    String
  product       Product     @relation(fields: [productId], references: [id])
  productId     String

  @@map("wishListItem")
}

model Story {
  id             String    @id              @default(uuid())
  title          String    @unique
  url            String    @db.VarChar(512)

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
 
  product        Product   @relation(fields: [productId], references: [id])
  productId      String

  @@map("story")
}

model Reels {
  id             String    @id              @default(uuid())
  url            String    @db.VarChar(512)

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
 
  @@map("reels")
}

model Offer {
  id             String    @id              @default(uuid())
  title          String    @unique
  banner         String    @db.VarChar(512)
  startTime      DateTime
  endTime        DateTime
  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  offerItems     OfferItem[]
 
  @@map("offer")
}

model OfferItem {
  id             String    @id              @default(uuid())

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  offer          Offer   @relation(fields: [offerId], references: [id])
  offerId        String
  product        Product   @relation(fields: [productId], references: [id])
  productId      String
 
  @@map("offerItem")
}

model DeliveryMan {
  id               String        @id           @default(uuid())
  name             String
  email            String
  type             String
  zone             String
  identityType     String
  identityNumber   String
  vehicle          String
  mobile           String
  password         String
  identityImage    String        @db.VarChar(512)
  deliveryManImage String        @db.VarChar(512)

  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  orders           Order[]

  @@map("deliveryMan")
}

model Admin {
  id             String    @id              @default(uuid())
  
  email          String    @unique
  password       String    

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
 
  @@map("admin")
}


